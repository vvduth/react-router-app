{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","NoQuotesFound","noquotes","AllQuotes","useEffect","length","NewCommentForm","commentTextRef","useRef","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDateils","match","useRouteMatch","path","exact","url","Card","card","children","QuoteForm","isEntered","setIsEntered","authorInputRef","textInputRef","when","onFocus","console","log","enteredAuthor","onAddQuote","isLoading","loading","NewQuote","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38be4384.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1yzTC\",\"loading\":\"QuoteForm_loading__bD3rL\",\"control\":\"QuoteForm_control__1zWNf\",\"actions\":\"QuoteForm_actions__3cm3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__vliUU\",\"logo\":\"MainNavigation_logo__cGBhd\",\"nav\":\"MainNavigation_nav__ITTcu\",\"active\":\"MainNavigation_active__3gSyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1yH-Z\",\"loading\":\"NewCommentForm_loading__fxy1b\",\"control\":\"NewCommentForm_control__2EIBT\",\"actions\":\"NewCommentForm_actions__3iGyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2qASr\",\"sorting\":\"QuoteList_sorting___-r5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__JFHN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3GmFZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__Ye2Tr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__jsiLo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2op4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1guBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__166yE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3SeUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2qtuI\"};","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to = {`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory , useLocation} from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation() ;\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHanlder = () =>{\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc': 'asc')}`\n    });\n    //history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n          <button onClick = {changeSortingHanlder}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === 'SEND') {\r\n    return {\r\n      data: null,\r\n      error: null,\r\n      status: 'pending',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'SUCCESS') {\r\n    return {\r\n      data: action.responseData,\r\n      error: null,\r\n      status: 'completed',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'ERROR') {\r\n    return {\r\n      data: null,\r\n      error: action.errorMessage,\r\n      status: 'completed',\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? 'pending' : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async function (requestData) {\r\n      dispatch({ type: 'SEND' });\r\n      try {\r\n        const responseData = await requestFunction(requestData);\r\n        dispatch({ type: 'SUCCESS', responseData });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: 'ERROR',\r\n          errorMessage: error.message || 'Something went wrong!',\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\n\r\nexport default useHttp;","const FIREBASE_DOMAIN = 'https://quotes-api-9da5f-default-rtdb.europe-west1.firebasedatabase.app';\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quotes.');\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quote.');\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not create quote.');\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(requestData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(requestData.commentData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not add comment.');\r\n  }\r\n\r\n  return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not get comments.');\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}\r\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to = '/new-quote' className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport NoQoutesFound from '../components/quotes/NoQuotesFound';\r\n\r\n\r\nconst AllQuotes = () => {\r\n\r\n    const {sendRequest, status, data: loadedQuote, error } = useHttp(getAllQuotes, true) ;\r\n\r\n    useEffect(() => {\r\n        sendRequest() ;\r\n\r\n    },[sendRequest])\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner /> \r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <p className='centered focused' >\r\n                {error}\r\n            </p>\r\n        )\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedQuote || loadedQuote.length === 0)) {\r\n        return (\r\n            <NoQoutesFound/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <QuoteList quotes= {loadedQuote}/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AllQuotes ;","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport useHttp from '../../hooks/use-http';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList'\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params =  useParams();\n  const { quoteId } = params;\n  const {sendRequest, status, data: loadedComments} = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments ;\n  \n  if (status === 'pending') {\n    comments = (<div className='centered'>\n        <LoadingSpinner/>\n    </div>);\n  }\n\n  if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentsList comments = {loadedComments}/>\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p>No comments were added yet.</p>\n  }\n  \n  \n  useEffect(() => {\n    sendRequest(params.quoteId)\n  },[params.quoteId, sendRequest]);\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId = {params.quoteId}  onAddedComment = {addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Route, Link , useRouteMatch} from \"react-router-dom\";\r\nimport Comments from '../components/comments/Comments';\r\nimport { useEffect } from \"react\";\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\n\r\nconst QuoteDateils = () => {\r\n\r\n    const match = useRouteMatch()\r\n    const params = useParams() ;\r\n\r\n    const {sendRequest, status, data: quote, error } = useHttp(getSingleQuote, true ) ;\r\n\r\n    useEffect(() => {\r\n        sendRequest(params.quoteId);\r\n    }, [sendRequest, params.quoteId]);\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className=\"centered\">\r\n                <LoadingSpinner /> \r\n            </div>\r\n        )\r\n    };\r\n\r\n    if (error) {\r\n        return (\r\n            <p className=\"centered\">\r\n                {error}\r\n            </p>\r\n        )\r\n    };\r\n\r\n\r\n    if (!quote) {\r\n        return (\r\n            <p>No quote found.</p>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <HighlightedQuote text = {quote.text} author = {quote.author}/>\r\n            <Route path = {match.path} exact>\r\n                <div className=\"centered\">\r\n                    <Link className=\"btn--flat\" to = {`${match.url}/comments`}>Load Comments</Link>\r\n                </div>\r\n            </Route>\r\n            \r\n            <Route path = {`${match.path}/comments`} >\r\n                <Comments/>\r\n            </Route>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default QuoteDateils ;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntered(false);\n  }\n\n  const formFocusHanlder = () => {\n    console.log('Focus');\n    setIsEntered(true);\n  }\n\n  return (\n    <>\n    <Prompt when = {isEntered} message={(location) =>'Are you sure you want to leave? All your entered data will be lost.' }/>\n    <Card>\n      <form onFocus = {formFocusHanlder} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick = {finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n\r\n    const {sendRequest, status } = useHttp(addQuote) ;\r\n    const history = useHistory() ;\r\n\r\n    useEffect(()=> {\r\n        if (status === 'completed') {\r\n            history.push('/quotes') ;\r\n        }\r\n    },[status, history])\r\n\r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest(quoteData);\r\n    }\r\n    return (\r\n        <>\r\n            <QuoteForm isLoading = {status === 'pending'} onAddQuote = {addQuoteHandler} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewQuote ;","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>\r\n                Great Quotes\r\n            </div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to='/quotes' activeClassName={classes.active}>All Quotes</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/new-quote' activeClassName={classes.active} >Add a Quote</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default MainNavigation ;","import { Fragment } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation'\r\n\r\nconst Layout = (props) =>{\r\n    return (\r\n        <Fragment>\r\n            <MainNavigation/>\r\n            <main className={classes.main}>{props.children}</main>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Layout ;","\r\nconst NotFound = () => {\r\n    return <div className='centered'>\r\n        <p>Page not found!</p>\r\n    </div>\r\n};\r\n\r\nexport default NotFound;","import {Route, Switch, Redirect} from 'react-router-dom';\nimport AllQuotes from './pages/AllQuotes';\nimport QuoteDateils from './pages/QuoteDetails';\nimport NewQuote from './pages/NewQuote';\nimport Layout from './components/layout/Layout';\nimport NotFound from './pages/NotFound';\nfunction App() {\n  return (\n    <Layout>\n    <Switch>\n      <Route path = '/' exact>\n        <Redirect to = '/quotes'/>\n      </Route>\n      <Route path='/quotes' exact>\n        <AllQuotes/>\n      </Route>\n          \n      <Route path = '/quotes/:quoteId'>\n        <QuoteDateils/>\n      </Route>\n\n      <Route path='/new-quote'>\n          <NewQuote/>\n      </Route> \n      \n      <Route path = '*'>\n           <NotFound />\n      </Route>\n    </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}